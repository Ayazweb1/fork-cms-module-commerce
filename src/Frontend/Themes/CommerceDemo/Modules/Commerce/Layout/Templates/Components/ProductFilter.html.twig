{#
    This ProductFilter uses AlpineJS to do the collapsing.
#}

<li
    class="mb-8 border-b border-gray-200"
    x-data="{ isCollapsed: false, isAnimating: false }"
>
    <h3
        class="flex items-center justify-between text-base font-normal text-black capitalize cursor-pointer"
        @click="isCollapsed = !isCollapsed; setTimeout(() => isAnimating = !isAnimating, 300);"
    >
        {{ title }}

        <div class="w-4 h-5 icon-fold">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" x-show="isCollapsed">
                <path fill-rule="evenodd" d="M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z" clip-rule="evenodd" />
            </svg>
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" x-show="!isCollapsed">
                <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
            </svg>
        </div>
    </h3>

    {# Filter values #}
    <div
        class="filter-body | transition-all duration-300 pb-8"
        x-ref="filterBody"
        :class="{ 'overflow-visible': !isCollapsed && !isAnimating, 'overflow-hidden': isCollapsed || isAnimating}"
        x-bind:style="!isCollapsed ? `max-height: ${ $refs.filterBody.scrollHeight + 32 }px; padding-bottom: 2rem;` : 'max-height: 0px; padding: 0;'"
    >
        <div class="filter-body | flex flex-col">
            {% block body %}
            {% endblock %}
        </div>
    </div>
</li>
